@page "/editarExp/{Id:int?}"
@rendermode InteractiveServer
@inject NavigationManager Navegador;

@inject IServicioAutorizacion ServicioAutorizacion
@inject ServicioIniciar ServicioIniciar

@inject CasoDeUsoExpedienteAlta CasoDeUsoExpedienteAlta
@inject CasoDeUsoExpedienteModificacion CasoDeUsoExpedienteModificacion 
@inject CasoDeUsoExpedienteConsultaPorId CasoDeUsoExpedienteConsultaPorId

<h1>Modificar Expedientes</h1>
@if(_tieneP){
<input placeholder="Caratula" @bind="_exp.caratula" class="form-control">
<label class="mt-1" for="est">Estado</label>
    <select class="form-control" @bind="_estado" id="est">
    <option value="" disabled selected>Seleccione un estado</option>
    <option>RecienIniciado</option>
    <option>ParaResolver</option>
    <option>ConResolucion</option>
    <option>EnNotificacion</option>
    <option>Finalizado</option>
</select><br>
<button class="btn btn-primary" @onclick="Aceptar">Aceptar</button>
}
else {
    <h2>No posee los permisos necesarios</h2>
}
@code{
    Expediente _exp= new Expediente();
    [Parameter] public int? Id{get;set;}
    //string _estado="";
    EstadoExpediente _estado;
    bool _tieneP=false;

    protected override void OnParametersSet(){
        if(ServicioIniciar.userL !=null){
            if(ServicioAutorizacion.PoseeElPermiso(ServicioIniciar.userL,Permiso.ExpedienteModificacion)){
                _tieneP=true;
            }
        }
        if(_tieneP){
            if(Id != null){
                var exp_hallado= CasoDeUsoExpedienteConsultaPorId.Ejecutar(Id.Value);
                if(exp_hallado != null){
                    _exp=exp_hallado;
                    //_exp.estadoE=(EstadoExpediente)Enum.Parse(typeof(EstadoExpediente),_estado); 
                    _exp.estadoE=_estado;
                }
            }
        }
    }
    void Aceptar(){
         CasoDeUsoExpedienteModificacion.Ejecutar(_exp,ServicioIniciar.userL);
        _exp= new Expediente();
        Navegador.NavigateTo("/listarExpedientes");
    }
}